apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: 'doraemonkit.gradle'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    defaultConfig {
        applicationId rootProject.ext.android["applicationId"]
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        multiDexEnabled true
    }
    signingConfigs {
        release {
            storeFile file("keystore/test.keystore")
            storePassword "test123456"
            keyAlias "test"
            keyPassword "test123456"
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
//            debuggable true
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //指定资源和代码目录
    sourceSets {
        debug {
            manifest.srcFile 'src/debug/java/AndroidManifest.xml'
            jniLibs.srcDir 'libs'
        }

        release {
            manifest.srcFile 'src/release/java/AndroidManifest.xml'
            jniLibs.srcDir 'libs'
        }

    }

    lintOptions {
        abortOnError false
    }

}

//dokit 扩展
dokitExt {
    dokitPluginSwitch = true
    slowMethodSwitch = true
    bigImgSwitch = true
    //单位为ms 1000ms = 1s
    thresholdTime = 200
    packageNames = ["com.didichuxing.doraemondemo"]
    //慢函数 黑名单 可以是包名 也可以是全路径的类名
    methodBlacklist = ["com.didichuxing.doraemondemo.dokit"]
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation rootProject.ext.dependencies["junit"]
    implementation rootProject.ext.dependencies["multidex"]
    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["kotlin"]
    implementation rootProject.ext.dependencies["retrofit2"]
    implementation rootProject.ext.dependencies["retrofit2_rxjava2"]
    implementation rootProject.ext.dependencies["retrofit2_gson"]
    implementation rootProject.ext.dependencies["okhttp"]
    implementation rootProject.ext.dependencies["glide"]
//    implementation rootProject.ext.dependencies["glide_okhttp3"]
    annotationProcessor rootProject.ext.dependencies["glide_compiler"]
    implementation rootProject.ext.dependencies["picasso"]
    implementation rootProject.ext.dependencies["fresco"]
    implementation rootProject.ext.dependencies["fresco-processors"]
    implementation rootProject.ext.dependencies["image-loader"]

    //weex相关
    implementation rootProject.ext.dependencies["weex_inspector"]
    implementation rootProject.ext.dependencies["weex_sdk"]
    implementation rootProject.ext.dependencies["utilcode"]
    implementation rootProject.ext.dependencies["easypermissions"]
    releaseImplementation rootProject.ext.dependencies["okgo"]
    //高德地图定位
    implementation rootProject.ext.dependencies["amap_location"]
    //腾讯地图定位
    implementation rootProject.ext.dependencies["tencent_location"]
    debugImplementation rootProject.ext.dependencies["leakcanary-android"]
    //百度地图定位
    implementation files('libs/BaiduLBS_Android.jar')
//    implementation 'com.aliyun.ams:alicloud-android-hotfix:3.2.12'

}

configurations.all {
    //循环每个依赖库
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        //获取当前循环到的依赖库
        def requested = details.requested
        //如果这个依赖库群组的名字是com.android.support
        if (requested.group == 'com.squareup.okhttp3') {
            //且其名字不是以multidex开头的
            if (requested.name == "okhttp") {
                //这里指定需要统一的依赖版本 比如我的需要配置成27.1.1
                details.useVersion '3.14.7'
            }
        }
    }
}
